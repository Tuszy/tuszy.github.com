<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: iOS | Mobile Developer's blog]]></title>
  <link href="http://tuszy.github.com/blog/categories/ios/atom.xml" rel="self"/>
  <link href="http://tuszy.github.com/"/>
  <updated>2012-01-19T12:05:11+01:00</updated>
  <id>http://tuszy.github.com/</id>
  <author>
    <name><![CDATA[Michal Tuszynski]]></name>
    <email><![CDATA[srgtuszy@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UIViews from xib files]]></title>
    <link href="http://tuszy.github.com/blog/2012/01/18/uiviews-from-xib-files/"/>
    <updated>2012-01-18T15:35:00+01:00</updated>
    <id>http://tuszy.github.com/blog/2012/01/18/uiviews-from-xib-files</id>
    <content type="html"><![CDATA[<p>During my last project, there was a need to load UIView classes from xib files. It's pretty
simple with the following method which takes two arguments: the xib name (without xib extension) and the Class of the UIView subclass.</p>

<p><div><script src='https://gist.github.com/1621680.js?file='></script>
<noscript><pre><code>+(UIView *)fetchViewFromNib:(NSString *)nibName withClass:(Class)viewClass {
    
    NSArray *nibObjects = [[NSBundle mainBundle] loadNibNamed:nibName owner:nil options:nil];
    
    UIView *view = nil;
    
    for (id object in nibObjects) {
        
        if ([object isKindOfClass:viewClass]) {
            view = object;
        }
    }
    
    return view;
}</code></pre></noscript></div>
</p>

<p>After emedding the snippet, just create a new subclass of UIView class and a xib file with a view. Then, just type in your custom class just like in the picture and connect outlets and actions you declared in the class.</p>

<p><img class="test.h" src="http://i.imgur.com/FESvX.png"></p>
]]></content>
  </entry>
  
</feed>
